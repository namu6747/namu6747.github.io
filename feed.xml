<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://namu6747.github.io/</id><title>namu6747</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-09-30T13:35:03+09:00</updated> <author> <name>namu6747</name> <uri>https://namu6747.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://namu6747.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://namu6747.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 namu6747 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>제초 작업</title><link href="https://namu6747.github.io/posts/grass/" rel="alternate" type="text/html" title="제초 작업" /><published>2022-09-07T09:02:00+09:00</published> <updated>2022-09-13T00:44:58+09:00</updated> <id>https://namu6747.github.io/posts/grass/</id> <content src="https://namu6747.github.io/posts/grass/" /> <author> <name>namu6747</name> </author> <category term="그 외" /> <category term="잡" /> <summary> 아까운 잔디를 지웠다. 학원을 오가며 집에서도 인강을 듣고 커밋을 자주 했는데 깃헙의 목적과 맞지 않다고 느꼈다. 1일 1커밋 욕심에 노력했었는데 부질없는 것 같다. 양심에 찔리기도 하다. 막상 정리하고 나니 아쉽긴 하지만 뭐 어쩔 수 없다. 이제와서 알았지만 github main 의 readme 텍스트 하나만 수정해도 잔디가 쌓이는데.. 지우길 잘했다. </summary> </entry> <entry><title>HTTP 상태 코드 살펴보기</title><link href="https://namu6747.github.io/posts/http-status/" rel="alternate" type="text/html" title="HTTP 상태 코드 살펴보기" /><published>2022-09-07T09:01:00+09:00</published> <updated>2022-09-09T15:15:26+09:00</updated> <id>https://namu6747.github.io/posts/http-status/</id> <content src="https://namu6747.github.io/posts/http-status/" /> <author> <name>namu6747</name> </author> <category term="공부" /> <category term="HTTP" /> <summary> 학원 최종 프로젝트였던 project-Betty 가 끝났다. 시간에 쫒겨 공통 예외 처리를 구현하지 못했었는데 결과적으로 상태 코드에 대한 학습이 우선이라 생각됐다. 정리하려는 이유는 아래와 같다. 클라이언트 측의 예외 인지 서버에서 Exception 이 발생하면, ajax 문 내부 error 에 정의된 콜백 함수가 실행되길 바랬다. 요청에 대한 정상적인 응답이 아님에도 200(OK) 코드로 전송되어 success 내부에서 약속에 의한 코드 또는 메시지로 분기하는 건, ajax 를 정의한 개발자에 대한 예의가 아니라 느꼈다. (애초에 전 지구적 약속인 Http 상태 코드가 존재한다.) 확실하진 않으나 서버에서 발생한 Exception 에 상태코드를 따로 붙여주지 않는다면 톰... </summary> </entry> <entry><title>16. 후기</title><link href="https://namu6747.github.io/posts/project-betty-16-review/" rel="alternate" type="text/html" title="16. 후기" /><published>2022-09-06T09:15:00+09:00</published> <updated>2022-09-15T13:57:07+09:00</updated> <id>https://namu6747.github.io/posts/project-betty-16-review/</id> <content src="https://namu6747.github.io/posts/project-betty-16-review/" /> <author> <name>namu6747</name> </author> <category term="프로젝트" /> <category term="Betty" /> <summary>     index 서론 기획 및 명세 패키지 트리 프로젝트 환경 메시지와 국제화 예외 다루기 검증 계정 관련 권한 인터셉터 도서 관련 대여 관련 오프라인 관련 about ajax 지식 공유 - ajax DTO, Form, VO, Entity 후기 한 달 전으로 돌아간다면 본격 코드 작업 이전에 팀원들이 기능 이외의 불필요한 생각을 덜 하게끔 좀더 명확한 규약을 세운다. 내 실력을 더 객관적으로 바라보고 아무 기능이나 다 가능하듯이 말하지 않는다. 팀원들의 적극적인 회의 참여를 주도하여 핵심 기능에 대한 명세 과정에서 서로 숙지할 수 있도록 이끈다. 포트폴리오도 중요하지만 내 공부도 중요하다. 학원 수업 시간에 혼자 작업하... </summary> </entry> <entry><title>15. DTO, Form, VO, Entity</title><link href="https://namu6747.github.io/posts/project-betty-15-object/" rel="alternate" type="text/html" title="15. DTO, Form, VO, Entity" /><published>2022-09-06T09:14:00+09:00</published> <updated>2022-09-15T13:57:07+09:00</updated> <id>https://namu6747.github.io/posts/project-betty-15-object/</id> <content src="https://namu6747.github.io/posts/project-betty-15-object/" /> <author> <name>namu6747</name> </author> <category term="프로젝트" /> <category term="Betty" /> <summary>     index 서론 기획 및 명세 패키지 트리 프로젝트 환경 메시지와 국제화 예외 다루기 검증 계정 관련 권한 인터셉터 도서 관련 대여 관련 오프라인 관련 about ajax 지식 공유 - ajax DTO, Form, VO, Entity 후기  도대체 뭐가 뭔지? 어떻게 사용할까? VO, ENTITY - 뭐가 다르지? 처음엔 얘네들을 사용하자 말을 꺼내기 전에 고민이 많았다. 우선, 그냥 VO 면 되지 않을까? 였다. Entity 라는 말은 JPA 강의에서 처음 들었는데 이게 VO 와 다른 게 무엇인가 하는 의문이 들었다. 검색을 토대로, 테이블을 모델로 한 객체라고 생각 했는데 학원 수업에서 다루는 VO 의 역할... </summary> </entry> <entry><title>14. 지식 공유 - ajax</title><link href="https://namu6747.github.io/posts/project-betty-14-edu-ajax/" rel="alternate" type="text/html" title="14. 지식 공유 - ajax" /><published>2022-09-06T09:13:00+09:00</published> <updated>2022-09-15T13:57:07+09:00</updated> <id>https://namu6747.github.io/posts/project-betty-14-edu-ajax/</id> <content src="https://namu6747.github.io/posts/project-betty-14-edu-ajax/" /> <author> <name>namu6747</name> </author> <category term="프로젝트" /> <category term="Betty" /> <summary>     index 서론 기획 및 명세 패키지 트리 프로젝트 환경 메시지와 국제화 예외 다루기 검증 계정 관련 권한 인터셉터 도서 관련 대여 관련 오프라인 관련 about ajax 지식 공유 - ajax DTO, Form, VO, Entity 후기  ajax 로 hello world 는 할 줄 알아야지 처음 ajax 를 통해 서버와 통신하며 겪은 시행착오에 대한 내용이다. 팀원들에게도 알려주려고 여러 경우의 수를 추가하여 작성했다. @RequestBody 아무 것도 모를 때 일단 편하게, 생각나는대로 해보자. json 객체를 선언하고, key 에는 쌍따옴표를 생략해도 된다고 했고, post 방식. 자주 사용하던 것부터... </summary> </entry> </feed>
